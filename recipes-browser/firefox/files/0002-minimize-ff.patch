From 278d08f2942f261ae5db1625bb65be35f78e37d0 Mon Sep 17 00:00:00 2001
From: skandigraun <skandigraun@gmail.com>
Date: Fri, 20 Oct 2023 13:06:21 +0200
Subject: [PATCH] commit

---
 toolkit/moz.configure | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/toolkit/moz.configure b/toolkit/moz.configure
index 9d5ee0ca91..4055865725 100644
--- a/toolkit/moz.configure
+++ b/toolkit/moz.configure
@@ -101,6 +101,7 @@ def gecko_profiler(target):
 
 @depends(gecko_profiler)
 def gecko_profiler_define(value):
+    
     if value:
         return True
 
@@ -122,6 +123,7 @@ def gecko_profiler_parse_elf(value, target):
     # MozDescribeCodeAddress to call into some Rust crates that parse ELF and
     # DWARF data, but build system issues currently prevent Rust from being
     # used in mozglue.)
+    
     if value and (target.kernel == "Linux" or target.kernel == "FreeBSD"):
         return True
 
@@ -603,6 +605,7 @@ set_define(gl_provider_define, True)
 # ==============================================================
 @depends(toolkit)
 def pdf_printing(toolkit):
+    return False
     if toolkit in ("windows", "gtk", "android"):
         return True
 
@@ -618,6 +621,7 @@ option(env="MOZ_INSTRUMENT_EVENT_LOOP", help="Force-enable event loop instrument
 
 @depends("MOZ_INSTRUMENT_EVENT_LOOP", toolkit)
 def instrument_event_loop(value, toolkit):
+    
     if value or (
         toolkit in ("windows", "gtk", "cocoa", "android") and value.origin == "default"
     ):
@@ -949,7 +953,7 @@ project_flag("MOZ_PLACES", help="Build Places if required", set_as_define=True)
 project_flag(
     "MOZ_SERVICES_HEALTHREPORT",
     help="Build Firefox Health Reporter Service",
-    set_as_define=True,
+    set_as_define=False,
 )
 
 project_flag(
@@ -987,7 +991,7 @@ def check_places_and_android_history(places, android_history):
 
 option(
     env="MOZ_TELEMETRY_REPORTING",
-    default=mozilla_official,
+    default=False,
     help="Enable telemetry reporting",
 )
 
@@ -996,7 +1000,7 @@ set_define("MOZ_TELEMETRY_REPORTING", True, when="MOZ_TELEMETRY_REPORTING")
 
 @depends("MOZ_TELEMETRY_REPORTING", milestone.is_nightly)
 def telemetry_on_by_default(reporting, is_nightly):
-    return reporting and is_nightly
+    return False
 
 
 set_define("MOZ_TELEMETRY_ON_BY_DEFAULT", True, when=telemetry_on_by_default)
